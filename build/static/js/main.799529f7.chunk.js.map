{"version":3,"sources":["components/Contact.js","components/Contacts.js","components/AddContactForm.js","components/SearchBar.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Contact","_ref","contact","removeContact","react_default","a","createElement","name","number","onClick","Contacts","contacts","result","map","components_Contact","key","AddContactForm","newName","handleNewName","newNumber","handleNewNumber","addPerson","onSubmit","value","onChange","type","SearchBar","filterName","handleFilterName","Notification","message","classType","className","baseUrl","phonebook","axios","get","then","response","data","newContact","post","id","put","concat","delete","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilterName","_useState9","_useState10","filteredPersons","setFilterPersons","_useState11","_useState12","notification","setNotification","_useState13","_useState14","error","setError","useEffect","handleNotification","setTimeout","handleError","components_Notification","components_SearchBar","event","target","filter","person","toLowerCase","includes","components_AddContactForm","preventDefault","existingContact","length","existingPerson","window","confirm","objectSpread","returnedPerson","catch","console","log","newContacts","newPerson","newPersons","components_Contacts","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.799529f7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Contact = ({ contact, removeContact }) => \n  <div>{contact.name} {contact.number} \n    <button onClick={() => removeContact(contact)}>\n      delete\n    </button>\n  </div>\n\nexport default Contact","import React from 'react'\nimport Contact from './Contact'\n\nconst Contacts = ({ contacts, removeContact }) => {\n  const result = contacts.map(contact => \n  <Contact \n    key={contact.name} \n    contact={contact} \n    removeContact={removeContact} />)\n\n  return (\n    <div>\n      {result}\n    </div>\n  )\n}\n\nexport default Contacts","import React from 'react'\n\nconst AddContactForm = ({ newName, handleNewName, newNumber, handleNewNumber, addPerson}) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNewName} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNewNumber} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddContactForm\n","import React from 'react'\n\nconst SearchBar = ({ filterName, handleFilterName }) => {\n  return (\n    <div>\n      filter shown with \n      <input value={filterName} onChange={handleFilterName} />\n    </div>\n  )\n}\n\nexport default SearchBar","import React from 'react'\n\nconst Notification = ({ message, classType }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={classType}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newContact => {\n  const request = axios.post(baseUrl, newContact)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newContact) => {\n  const request = axios.put(`${baseUrl}/${id}`, newContact)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  remove\n}","import React, { useState, useEffect } from 'react'\nimport Contacts from './components/Contacts'\nimport AddContactForm from './components/AddContactForm'\nimport SearchBar from './components/SearchBar'\nimport Notification from './components/Notification'\nimport phonebook from './services/phonebook'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterName, setFilterName ] = useState('')\n  const [ filteredPersons, setFilterPersons ] = useState(persons)\n  const [ notification, setNotification ] = useState(null)\n  const [ error, setError ] = useState(null)\n\n  const fetchData = () => {\n    phonebook\n      .getAll()\n      .then(contacts => {\n        setPersons(contacts)\n        setFilterPersons(contacts)\n      })\n  }\n\n  useEffect(fetchData, [])\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterName = (event) => {\n    setFilterName(event.target.value)\n    if (event.target.value === '') {\n      setFilterPersons(persons)\n    } else {\n      setFilterPersons(filteredPersons.filter( person => \n        person['name'].toLowerCase().includes(event.target.value.toLowerCase())))  \n    }\n  }\n\n  const handleNotification = (message) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification(null)\n    }, 3000)\n  }\n\n  const handleError = (message) => {\n    setError(message)\n    setTimeout(() => {\n      setError(null)\n    }, 3000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existingContact = persons.filter( person => \n      person['name'].toLowerCase() === (newName.toLowerCase()))\n\n    if (existingContact.length === 1) {\n      const existingPerson = existingContact[0]\n      const result = window.confirm(\n        `${existingPerson.name} is already added to phonebook, replace the old number with a new one?`)\n\n      if (result) {\n        phonebook\n          .update(existingPerson.id, {...existingPerson, number: newNumber})\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n            setFilterPersons(filteredPersons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n            handleNotification(`Updated ${existingPerson.name}'s number`)\n          })\n          .catch(error => {\n            console.log(error)\n            const newContacts = persons.filter(person => person.id !== existingPerson.id)\n            setPersons(newContacts)\n            setFilterPersons(newContacts.filter(person => \n              person['name'].toLowerCase().includes(filterName.toLowerCase())))\n            handleError(`Information of ${existingPerson.name} has already been removed from server`)\n          })\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      } \n\n      phonebook\n        .create(newPerson)\n        .then(contact => {\n          const newPersons = persons.concat(contact)\n          setPersons(newPersons)\n          setFilterPersons(newPersons)\n          setNewName('')\n          setNewNumber('')\n          handleNotification(`Added ${newPerson.name}`)\n        })\n        .catch(error => {\n          handleError(error.response.data.error)\n        })\n    }\n  }\n\n  const deletePerson = contact => {\n    const result = window.confirm(`Delete ${contact.name} ?`)\n    if (result) {\n      phonebook\n        .remove(contact.id)\n        .then(data => {\n          const newContacts = persons.filter(person => person.id !== contact.id)\n          setPersons(newContacts)\n          setFilterPersons(newContacts.filter(person => \n            person['name'].toLowerCase().includes(filterName.toLowerCase())))\n          handleError(`Deleted ${contact.name}`)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={error} classType='error' />\n      <Notification message={notification} classType='success'/>\n      <SearchBar \n        filterName={filterName} \n        handleFilterName={handleFilterName} />\n\n      <h3>add a new</h3>\n      <AddContactForm \n        newName={newName} \n        handleNewName={handleNewName}\n        newNumber={newNumber} \n        handleNewNumber={handleNewNumber} \n        addPerson={addPerson} />\n\n      <h3>Numbers</h3>\n      <Contacts \n        contacts={filteredPersons} \n        removeContact={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}